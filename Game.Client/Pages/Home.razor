@page "/"

<PageTitle>Game</PageTitle>

<SKCanvasView EnableRenderLoop="true" OnPaintSurface="OnPaintSurface" Width="400" Height="400" />

@code {


	private SKCanvasView? _canvasView;

	private void OnPaintSurface(SKPaintSurfaceEventArgs e) {
		SKCanvas canvas = e.Surface.Canvas;

		canvas.Clear(SKColors.Black);

		using var paint = new SKPaint {
			Color = SKColors.Red,
			IsAntialias = true
		};
		Console.WriteLine("OnPaintSurface called");
		// рисуем круг в центре канваса
		float centerX = e.Info.Width / 2f;
		float centerY = e.Info.Height / 2f;
		canvas.DrawCircle(centerX, centerY, 50, paint);
	}
}






<!--
<SKCanvasView @ref="canvasView" PaintSurface="OnPaint" 
              Width="400" Height="400" @onmousemove="OnMouseMove"/>
<h1>Hello, world!</h1>

Welcome to your new app.

@code {


	private SKCanvasView canvasView;

	private float playerX = 400;
	private float playerY = 300;
	private float mouseX;
	private float mouseY;

	private const float Speed = 2f;

	private System.Timers.Timer timer;

	protected override void OnAfterRender(bool firstRender) {
		if (firstRender) {
			timer = new System.Timers.Timer(16); // ~60 FPS
			timer.Elapsed += (s, e) => InvokeAsync(() => canvasView?.Invalidate());
			timer.Start();
		}
	}

	public void Dispose() {
		if (timer != null) {
			timer.Stop();
			timer.Dispose();
			timer = null;
		}
	}

	private void MovePlayer() {
		float dx = mouseX - playerX;
		float dy = mouseY - playerY;
		float dist = MathF.Sqrt(dx * dx + dy * dy);
		if (dist > 1) {
			playerX += dx / dist * Speed;
			playerY += dy / dist * Speed;
		}
	}

	private void OnPaint(SKPaintSurfaceEventArgs e) {
		var canvas = e.Surface.Canvas;
		canvas.Clear(SKColors.White);

		MovePlayer();

		using var paint = new SKPaint {
			Color = SKColors.Red,
			IsAntialias = true
		};
		canvas.DrawCircle(playerX, playerY, 20, paint);
	}

	private void OnMouseMove(MouseEventArgs e) {
		mouseX = (float)e.OffsetX;
		mouseY = (float)e.OffsetY;
	}
}
-->
