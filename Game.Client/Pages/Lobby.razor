@page "/lobby/{LobbyCode}"

@inject NavigationManager Navigation

<div class="container py-4">

	<h2 class="text-center mb-4">Lobby</h2>

	<div class="mb-3">
		<label>Invitation link:</label>
		<input class="form-control" value="@LobbyLink" readonly />
		<button class="btn btn-outline-secondary mt-2" @onclick="CopyLink">Copy</button>
	</div>

	<div class="mb-4">
		<h4>Players (@Players.Count / 20)</h4>
		@foreach (var player in Players) {
			<div class="d-flex align-items-center mb-2">
				<input class="form-control me-2" style="width:200px" @bind="player.Name" />
				@if (IsHost) {
					<button class="btn btn-sm btn-danger" @onclick="() => RemovePlayer(player)">X</button>
				}
			</div>
		}
		@if (IsHost && Players.Count < 20) {
			<button class="btn btn-sm btn-success" @onclick="AddAIPlayer">Добавить ИИ</button>
		}
	</div>

	<div class="text-center">
		<button class="btn btn-primary btn-lg" @onclick="StartGame">Начать игру</button>
	</div>

</div>

@code {
	private string LobbyCode = Guid.NewGuid().ToString().Substring(0, 12);


	private string LobbyLink => Nav.BaseUri + "lobby?code=" + LobbyCode;
	private string LobbyCode = Guid.NewGuid().ToString().Substring(0, 12);

	bool IsHost = true; // логика определить кто хост
	List<Player> Players = new List<Player>();

	protected override void OnInitialized() {
		// Если нет соединения с сервером — добавить 1 ИИ
		if (!ServerAvailable())
			Players.Add(new Player { Name = "ИИ-1", IsAI = true });
	}

	void AddAIPlayer() {
		int aiCount = Players.Count(p => p.IsAI) + 1;
		Players.Add(new Player { Name = $"ИИ-{aiCount}", IsAI = true });
	}

	void RemovePlayer(Player p) => Players.Remove(p);

	void StartGame() {
		// логика начала игры
	}

	void CopyLink() {
		// JSInterop для копирования в буфер
	}

	bool ServerAvailable() => false; // проверка соединения с сервером
}

class Player
{
    public string Name { get; set; }
    public bool IsAI { get; set; } = false;
}
