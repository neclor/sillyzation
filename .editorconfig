root = true

[*]
charset = utf-8
end_of_line = lf
trim_trailing_whitespace = true
insert_final_newline = true

[*.md]
trim_trailing_whitespace = false

[*.json]
indent_size = 2
indent_style = space
tab_width = 2

[*.{html,js,ts}]
indent_size = 4
indent_style = space
tab_width = 4

[*.{css,scss}]
indent_size = 2
indent_style = space
tab_width = 2

[*.{xml,sln,slnx,csproj}]
indent_size = 2
indent_style = space
tab_width = 2

[*.{cs,razor,cshtml}]
indent_size = 4
indent_style = tab
tab_width = 4

#### .NET Code Actions ####

dotnet_hide_advanced_members = false
dotnet_search_reference_assemblies = true
dotnet_property_generation_behavior = prefer_throwing_properties
dotnet_member_insertion_location = with_other_members_of_the_same_kind

dotnet_prefer_system_hash_code = true:warning # ?
dotnet_style_operator_placement_when_wrapping = beginning_of_line # ?
csharp_style_prefer_simple_property_accessors = true:suggestion # ?

#### Code-style rules ####

dotnet_diagnostic.IDE0001.severity = silent # Simplify name
dotnet_diagnostic.IDE0002.severity = silent # Simplify member access

# IDE0003, IDE0009 Remove this or Me qualification
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent

dotnet_diagnostic.IDE0004.severity = silent # Remove unnecessary cast
dotnet_diagnostic.IDE0005.severity = silent # Remove unnecessary import

# IDE0007, IDE0008 Use var instead of explicit type
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = false:suggestion
csharp_style_var_elsewhere = false:suggestion

dotnet_diagnostic.IDE0010.severity = warning # Add missing cases to switch statement

csharp_prefer_braces = when_multiline:suggestion # IDE0011 Add braces
csharp_style_throw_expression = true:suggestion # IDE0016 Use throw expression
dotnet_style_object_initializer = true:suggestion # IDE0017 Use object initializer
csharp_style_inlined_variable_declaration = true:suggestion # IDE0018 Inline variable declaration
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion # IDE0019, IDE0260 Use pattern matching to avoid as followed by a null check
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion # IDE0020, IDE0038 Use pattern matching to avoid is check followed by a cast

csharp_style_expression_bodied_constructors = when_on_single_line:suggestion # IDE0021 Use expression body for constructors
csharp_style_expression_bodied_methods = when_on_single_line:suggestion # IDE0022 Use expression body for methods
csharp_style_expression_bodied_operators = when_on_single_line:suggestion # IDE0023, IDE0024 Use expression body for conversion operators
csharp_style_expression_bodied_properties = when_on_single_line:suggestion # IDE0025 Use expression body for properties
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion # IDE0026 Use expression body for indexers
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion # IDE0027 Use expression body for accessors

# IDE0028 Use collection initializers
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion # IDE0300, IDE0301, IDE0302, IDE0303, IDE0304, IDE0305, IDE0306 Use collection expression

dotnet_style_coalesce_expression = true:suggestion # IDE0029, IDE0030, IDE0270 Null check can be simplified
dotnet_style_null_propagation = true:suggestion # IDE0031 Use null propagation
dotnet_style_prefer_auto_properties = true:suggestion # IDE0032 Use auto property
dotnet_style_explicit_tuple_names = true:suggestion # IDE0033 Use explicitly provided tuple name
csharp_prefer_simple_default_expression = true:suggestion # IDE0034 Simplify default expression

dotnet_diagnostic.IDE0035.severity = warning # Remove unreachable code

csharp_preferred_modifier_order = public,private,protected,internal,file,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,required,volatile,async:warning # IDE0036 Order modifiers

# IDE0037 Use inferred member name
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion

csharp_style_prefer_local_over_anonymous_function = true:warning # IDE0039 Use local function instead of lambda
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning # IDE0040 Add accessibility modifiers

dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion # IDE0041 Use is null check
csharp_style_deconstructed_variable_declaration = true:suggestion # IDE0042 Deconstruct variable declaration
dotnet_style_readonly_field = true:warning # IDE0044 Add readonly modifier
dotnet_style_prefer_conditional_expression_over_assignment = true:silent # IDE0045 Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_return = true:silent # IDE0046 Use conditional expression for return

# IDE004, IDE0048 Remove unnecessary parentheses, Add parentheses for clarity
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# IDE0049 Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

dotnet_diagnostic.IDE0050.severity = suggestion # Convert anonymous type to tuple
dotnet_diagnostic.IDE0051.severity = warning # Remove unused private member
dotnet_diagnostic.IDE0052.severity = warning # Remove unread private member

csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion # IDE0053 Use expression body for lambdas
dotnet_style_prefer_compound_assignment = true:suggestion # IDE0054, IDE0074 Use compound assignment

# IDE0055 Fix formatting
dotnet_diagnostic.IDE0055.severity = warning

### .NET formatting options ###
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

### C# formatting options ###

## New-line options ##
csharp_new_line_before_open_brace = none
csharp_new_line_before_else = false
csharp_new_line_before_catch = false
csharp_new_line_before_finally = false
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

## Indentation options ##
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = false

## Spacing options ##
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false

## Wrap options ##
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

csharp_style_prefer_index_operator = true:suggestion # IDE0056 Use index operator
csharp_style_prefer_range_operator = true:suggestion # IDE0057 Use range operator
csharp_style_unused_value_expression_statement_preference = discard_variable:silent # IDE0058 Remove unused expression value
csharp_style_unused_value_assignment_preference = discard_variable:suggestion # IDE0059 Remove unnecessary value assignment
dotnet_code_quality_unused_parameters = all:warning # IDE0060 Remove unused parameter
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion # IDE0061 Use expression body for local functions
csharp_prefer_static_local_function = true:warning # IDE0062 Make local function static
csharp_prefer_simple_using_statement = true:suggestion # IDE0063 Use simple using statement

dotnet_diagnostic.IDE0064.severity = warning # Make struct fields writable

csharp_using_directive_placement = outside_namespace:suggestion # IDE0065 using directive placement
csharp_style_prefer_switch_expression = true:suggestion # IDE0066 Use switch expression

dotnet_diagnostic.IDE0070.severity = warning # Use System.HashCode.Combine

dotnet_style_prefer_simplified_interpolation = true:suggestion # IDE0071 Simplify interpolation

dotnet_diagnostic.IDE0072.severity = warning # Add missing cases to switch expression

file_header_template = unset # IDE0073 Use file header
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion # IDE0075 Simplify conditional expression

dotnet_diagnostic.IDE0076.severity = warning # Remove invalid global SuppressMessageAttribute
dotnet_diagnostic.IDE0077.severity = warning # Avoid legacy format target in global SuppressMessageAttribute

csharp_style_prefer_pattern_matching = true:suggestion # IDE0078 Use pattern matching

dotnet_diagnostic.IDE0079.severity = silent # Remove unnecessary suppression
dotnet_remove_unnecessary_suppression_exclusions = none # IDE0079 Remove unnecessary suppression

dotnet_diagnostic.IDE0080.severity = suggestion # Remove unnecessary suppression operator
dotnet_diagnostic.IDE0082.severity = warning # Convert typeof to nameof

csharp_style_prefer_not_pattern = true:suggestion # IDE0083 Use pattern matching (not operator)
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion # IDE0090 Simplify new expression

dotnet_diagnostic.IDE0100.severity = warning # Remove unnecessary equality operator
dotnet_diagnostic.IDE0110.severity = warning # Remove unnecessary discard
dotnet_diagnostic.IDE0120.severity = warning # Simplify LINQ expression
dotnet_diagnostic.IDE0121.severity = warning # Simplify LINQ type check and cast

dotnet_style_namespace_match_folder = false:suggestion # IDE0130 Namespace does not match folder structure
csharp_style_prefer_null_check_over_type_check = true:suggestion # IDE0150 Prefer null check over type check
csharp_style_namespace_declarations = file_scoped:suggestion # IDE0160, IDE0161 Use namespace
csharp_style_prefer_extended_property_pattern = true:suggestion # IDE0170 Simplify property pattern
csharp_style_prefer_tuple_swap = true:suggestion # IDE0180 Use tuple to swap values
csharp_style_prefer_method_group_conversion = true:suggestion # IDE0200 Remove unnecessary lambda expression
csharp_style_prefer_top_level_statements = false:silent # IDE0210, IDE0211 Convert to top-level statements
dotnet_style_prefer_foreach_explicit_cast_in_source = when_strongly_typed:suggestion # IDE0220 Add explicit cast in foreach loop
csharp_style_prefer_utf8_string_literals = true:suggestion # IDE0230 Use UTF-8 string literal

dotnet_diagnostic.IDE0240.severity = warning # IDE0240 Nullable directive is redundant
dotnet_diagnostic.IDE0241.severity = warning # IDE0241 Nullable directive is unnecessary

csharp_style_prefer_readonly_struct = true:warning # IDE0250 Struct can be made readonly
csharp_style_prefer_readonly_struct_member = true:warning # IDE0251 Member can be made readonly

dotnet_diagnostic.IDE0280.severity = warning # Use nameof

csharp_style_prefer_primary_constructors = true:suggestion # IDE0290 Use primary constructor
csharp_prefer_static_anonymous_function = true:warning # IDE0320 Make anonymous function static
csharp_prefer_system_threading_lock = true:warning # IDE0330 Prefer System.Threading.Lock
csharp_style_prefer_unbound_generic_type_in_nameof = true:warning # IDE0340 Use unbound generic type
csharp_style_prefer_implicitly_typed_lambda_expression = true:suggestion # IDE0350 Use implicitly typed lambda
csharp_style_conditional_delegate_call = true:suggestion # IDE1005 Use conditional delegate call

# IDE1006 Naming styles
dotnet_diagnostic.IDE1006.severity = suggestion

## Naming rules ##
dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

## Symbol specifications ##
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

## Naming styles ##
dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_style_allow_multiple_blank_lines_experimental = true:silent # IDE2000 Avoid multiple blank lines
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent # IDE2001 Embedded statements must be on their own line
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:warning # IDE2002 Consecutive braces must not have blank line between them
dotnet_style_allow_statement_immediately_after_block_experimental = true:silent # IDE2003 Blank line required between block and subsequent statement
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true:silent # IDE2004 Blank line not allowed after constructor initializer colon
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = false:suggestion # IDE2005 Blank line not allowed after conditional expression token
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = true:silent # IDE2006 Blank line not allowed after arrow expression clause token

# dotnet_diagnostic.IDE3000.severity = none # IDE3000 Implement with Copilot
